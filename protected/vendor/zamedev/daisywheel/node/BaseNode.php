<?php

namespace daisywheel\node;

class BaseNode
{
    // тип поля - ссылка на другую ноду
    // хранить предыдущие версии (и историю изменений - кто и что и где поменял)
    // локализация
    // права доступа (хотя бы по поддеревьям)
    // optimistic lock
    // тип данных как список чего-нибудь

    // типы филдов - однострочный текст, html текст, файл, картинка, линк на страницу.
    // причём файлы и картинки - штатные, чтоб не надо было писать кучу кода, если мне нужна нода с картинками

    // обязательно надо предусмотреть механизм временного сохранения ноды в сессии
    // (или даже может лучше сохранять в базе с флагом temporary=1, чтоб меньше ебалова было),
    // и соответственно автоматического удаления этих темповых нод (и всяких связанных с ними файлов).
    // Это надо для тех случаев, когда в процессе редактирования ноды нужно знать её id-шку,
    // например, когда добавляется несколько картинок, или есть внутренние ноды.

    // да, лучше в базе, тогда будет унификация этих механизмов. естественно,
    // что надо учитывать то, что могут одновременно быть залогинены много юзеров,
    // или даже один и тот же юзер из разных браузеров.
    // т.е. надо темповые ноды помечать каким-нибудь уникальным идентификатором браузера
    // (чтоб он был разным даже для одного и того же юзера).

    // Что делать если несколько объектов участвуют в процессе?
    // Варианты такие - проапдейтить все объекты (даже те, которые не менялись),
    // и если хоть какой-нибудь был изменён, то повторить цикл заново. Либо использовать master-lock

    // Поддержка как минимум MySQL, SQLite, PostgreSQL

    public static function cleanup($id, $path)
    {
        // *перед* удалением вызывается статическая функа cleanup,
        // в неё передаётся id-шник ноды и path. потом ноды удаляются массово.
        // так как функа вызывается перед удалением, при острой необходимости можно поднять ноду из базы,
        // если данные о том, что надо удалить лежат в ноде
    }
}
